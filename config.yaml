# =============================================================================
# SOCRATIC RAG ENHANCED - MAIN CONFIGURATION FILE
# =============================================================================
# This file contains all configuration settings for the Socratic RAG Enhanced system.
# Environment variables can override any setting using SOCRATIC_ prefix.
# Example: SOCRATIC_SYSTEM_DEBUG=true overrides system.debug

# =============================================================================
# SYSTEM CORE CONFIGURATION
# =============================================================================
system:
  name: "Socratic RAG Enhanced"
  version: "7.3.0"
  debug: false
  data_path: "data"
  secret_key: "change-this-in-production-socratic-rag-2024"
  environment: "development"  # development, production, testing

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
database:
  type: "sqlite"
  path: "data/socratic.db"
  backup_enabled: true
  backup_interval_hours: 24
  connection_pool_size: 10
  timeout_seconds: 30

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

  # File logging
  file:
    enabled: true
    path: "data/logs/socratic.log"
    max_size_mb: 50
    backup_count: 5
    rotation: "daily"

  # Console logging
  console:
    enabled: true
    level: "INFO"

  # Agent-specific logging
  agents:
    log_requests: true
    log_responses: true
    log_performance: true

# =============================================================================
# AI SERVICES CONFIGURATION
# =============================================================================
ai:
  # Claude (Anthropic) Configuration
  claude:
    model: "claude-3-5-sonnet-20241022"
    max_tokens: 8192
    temperature: 0.7
    timeout_seconds: 60

  # Vector Database Configuration
  database:
    type: "chromadb"
    path: "data/vector_db"
    collection_name: "socratic_knowledge"
    embedding_model: "all-MiniLM-L6-v2"

  # Text Processing
  processing:
    chunk_size: 1000
    chunk_overlap: 200
    max_context_length: 16000

# =============================================================================
# AGENT SYSTEM CONFIGURATION
# =============================================================================
agents:
  # Global agent settings
  global:
    max_concurrent: 5
    timeout_seconds: 300
    retry_attempts: 3
    cache_results: true

  # Socratic Counselor Agent
  socratic_counselor:
    enabled: true
    max_questions_per_session: 50
    role_rotation: true
    conflict_detection: true

  # Code Generator Agent
  code_generator:
    enabled: true
    max_files_per_project: 500
    testing_enabled: true
    security_scanning: true
    auto_open_files: true
    sync_on_generation: true

  # Context Analyzer Agent
  context_analyzer:
    enabled: true
    conflict_threshold: 0.7
    insight_generation: true

  # Services Agent
  services_agent:
    enabled: true
    git_integration: true
    ide_integration: true

  # File Storage
  storage:
    uploads_path: "data/uploads"
    exports_path: "data/exports"
    generated_projects_path: "data/generated_projects"
    max_upload_size_mb: 100
    allowed_extensions: ["pdf", "docx", "txt", "md", "py", "js", "html", "css", "json", "xml"]

# =============================================================================
# WEB APPLICATION
# =============================================================================
web:
  host: "127.0.0.1"
  port: 5000
  threaded: true

  # Session configuration
  session:
    permanent: false
    lifetime: 3600  # seconds

  # CORS settings
  cors:
    enabled: true
    origins: ["http://localhost:3000", "http://127.0.0.1:3000"]

  # File upload settings
  upload:
    max_content_length: 104857600  # 100MB
    upload_folder: "data/uploads"

  # Template settings
  templates:
    auto_reload: true
    cache_size: 100

# =============================================================================
# SECURITY
# =============================================================================
security:
  # Authentication
  auth:
    require_login: true
    password_min_length: 8
    password_require_special: false  # Simplified for local use
    max_login_attempts: 5
    lockout_duration: 300  # seconds

  # API Security
  api:
    rate_limiting: true
    require_api_key: false  # Set to true in production
    cors_enabled: true

  # Code Generation Security
  code_security:
    scan_generated_code: true
    block_dangerous_patterns: true
    sanitize_user_input: true
    allowed_imports: ["os", "sys", "json", "requests", "sqlite3"]
    blocked_imports: ["subprocess", "eval", "exec"]

# =============================================================================
# TESTING
# =============================================================================
testing:
  # Test environment settings
  environment: "test"
  database_path: ":memory:"  # In-memory SQLite for tests

  # Test execution
  coverage:
    enabled: true
    minimum_threshold: 80

  # Mock services for testing
  mocks:
    claude_api: true
    git_operations: true
    file_system: false

# =============================================================================
# DEVELOPMENT
# =============================================================================
development:
  # Hot reload settings
  hot_reload: true
  auto_restart: true

  # Debug settings
  sql_echo: false
  template_debug: true

  # Development tools
  profiling: false
  memory_tracking: false

# =============================================================================
# DEPLOYMENT
# =============================================================================
deployment:
  # Production settings
  production:
    debug: false
    testing: false
    secret_key_required: true

  # Docker settings
  docker:
    enabled: false
    compose_file: "docker-compose.yml"

  # Environment variables mapping
  env_vars:
    - "ANTHROPIC_API_KEY"
    - "SECRET_KEY"
    - "DATABASE_URL"
    - "FLASK_ENV"

# =============================================================================
# USER MANAGEMENT (Local Use)
# =============================================================================
users:
  # Default admin user (for local installation)
  admin:
    enabled: true
    username: "admin"
    # Password hash will be generated on first run

  # User tracking for conflict resolution
  tracking:
    enabled: true
    track_actions: true
    track_conflicts: true
    session_timeout: 8  # hours

# =============================================================================
# PERFORMANCE & OPTIMIZATION
# =============================================================================
performance:
  # Memory management
  memory:
    max_usage_mb: 2048
    cleanup_interval: 300  # seconds

  # Caching
  cache:
    enabled: true
    ttl: 3600  # seconds
    max_entries: 10000

  # Concurrent processing
  concurrency:
    max_workers: 4
    queue_size: 100

# =============================================================================
# MONITORING & ANALYTICS
# =============================================================================
monitoring:
  # System health
  health_checks:
    enabled: true
    interval: 60  # seconds

  # Metrics collection
  metrics:
    enabled: true
    retention_days: 30

  # Error tracking
  error_tracking:
    enabled: true
    max_errors: 1000